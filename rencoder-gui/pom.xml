<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>pt.ornrocha</groupId>
		<artifactId>rencoder</artifactId>
		<version>1.0.0</version>
	</parent>
	<artifactId>rencoder-gui</artifactId>

	<properties>
		<globalResourcesDirectory>src/main/global-resources</globalResourcesDirectory>
		<builddir>${project.build.directory}/build_dir</builddir>
		<buildlibdir>${project.build.directory}/build_dir/lib</buildlibdir>
		<izpack.version>5.1.2</izpack.version>
		<installer-output-filename>Rencoder-installer.jar</installer-output-filename>
		<jar.finalName>rencoder</jar.finalName>
		<deb-output-filename>Rencoder-installer.deb</deb-output-filename>
		<!-- <deb-dir-name>jbiclustge</deb-dir-name> -->
	</properties>

	<dependencies>
		<dependency>
			<groupId>pt.ornrocha</groupId>
			<artifactId>rencoder-core</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>uk.co.caprica</groupId>
			<artifactId>vlcj</artifactId>
			<version>3.12.1</version>
		</dependency>

		<dependency>
			<groupId>com.github.insubstantial</groupId>
			<artifactId>substance</artifactId>
			<version>7.1</version>
		</dependency>
		<dependency>
			<groupId>com.github.insubstantial</groupId>
			<artifactId>flamingo</artifactId>
			<version>6.3</version>
		</dependency>
		<dependency>
			<groupId>com.github.insubstantial</groupId>
			<artifactId>trident</artifactId>
			<version>6.3</version>
		</dependency>

		<dependency>
			<groupId>com.jtattoo</groupId>
			<artifactId>JTattoo</artifactId>
			<version>1.6.7</version>
		</dependency>
		<dependency>
			<groupId>com.jgoodies</groupId>
			<artifactId>looks</artifactId>
			<version>2.1.4</version>
		</dependency>
		<dependency>
			<groupId>net.sf.squirrel-sql.thirdparty-non-maven</groupId>
			<artifactId>oalnf</artifactId>
			<version>3.0</version>
		</dependency>
		<dependency>
			<groupId>net.sf.tinylaf</groupId>
			<artifactId>tinylaf</artifactId>
			<version>1.4.0</version>
		</dependency>
		<dependency>
			<groupId>com.github.arnabk</groupId>
			<artifactId>pgslookandfeel</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>com.seaglasslookandfeel</groupId>
			<artifactId>seaglasslookandfeel</artifactId>
			<version>0.2.1</version>
		</dependency>

		<dependency>
			<groupId>de.sciss</groupId>
			<artifactId>weblaf-ui</artifactId>
			<version>1.28</version>
		</dependency>
		<dependency>
			<groupId>com.github.vincenzopalazzo</groupId>
			<artifactId>material-ui-swing</artifactId>
			<version>v0.9.4.5</version>
		</dependency>
		<dependency>
			<groupId>org.kamranzafar.jddl</groupId>
			<artifactId>jddl</artifactId>
			<version>0.7.1</version>
		</dependency>
		<dependency>
			<groupId>org.rauschig</groupId>
			<artifactId>jarchivelib</artifactId>
			<version>0.7.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>1.18</version>
		</dependency>
		<dependency>
			<groupId>org.tukaani</groupId>
			<artifactId>xz</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>org.swinglabs</groupId>
			<artifactId>swingx</artifactId>
			<version>1.6.1</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>default-jar</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<finalName>rencoder</finalName>
							<archive>
								<manifest>
									<mainClass>
										pt.ornrocha.rencoder.gui.execute.ExecRencoder
									</mainClass>
								</manifest>
							</archive>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<appendAssemblyId>false</appendAssemblyId>
							<outputDirectory>target/build_dir</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.1</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<!-- copy resources -->
					<execution>
						<id>copy-global-resources</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${builddir}</outputDirectory>
							<resources>
								<resource>
									<directory>${globalResourcesDirectory}</directory>
									<!-- <filtering>true</filtering> -->
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>create-staging-area</id>
						<!--<phase>process-resources</phase> -->
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<ant antfile="${basedir}/src/main/ant/build.xml">
									<target name="build-releases" />
								</ant>
								<copy todir="${builddir}">
									<fileset dir="${basedir}/src/main/izpack" />
								</copy>
								<!-- <copy todir="${izpack.staging}"> <fileset dir="${basedir}/src/main/izpack" 
									/> </copy> <copy todir="${izpack.staging}"> <fileset dir="${project.build.directory}/dist" 
									/> </copy> <delete file="${project.build.directory}/dist/default_shortcut_specification.xml" 
									failonerror="false" /> <delete file="${project.build.directory}/dist/jbiclustge_installer_unix_shortcutSpec.xml" 
									failonerror="false" /> -->
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.izpack</groupId>
				<artifactId>izpack-maven-plugin</artifactId>
				<version>${izpack.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>izpack</goal>
						</goals>
						<configuration>
							<!-- base for relative paths in izpack descriptor -->
							<baseDir>${builddir}</baseDir>
							<installFile>${basedir}/src/main/izpack/install.xml</installFile>
							<output>${basedir}/${installer-output-filename}</output>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.izpack</groupId>
						<artifactId>izpack-panel</artifactId>
						<version>${izpack.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.vafer</groupId>
				<artifactId>jdeb</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>deb</id>
						<phase>package</phase>
						<goals>
							<goal>jdeb</goal>
						</goals>
						<configuration>
							<verbose>false</verbose>
							<deb>${basedir}/${deb-output-filename}</deb>
							<controlDir>${basedir}/src/main/deb/control</controlDir>
							<dataSet>
								<data>
									<src>${project.build.directory}/build_dir</src>
									<type>directory</type>
									<excludes>default_shortcut_specification.xml,rencoder_installer_unix_shortcutSpec.xml,install.xml,run.bat,ffmpeg/default_ffmpeg.exe</excludes>
									<mapper>
										<type>perm</type>
										<prefix>/opt/${jar.finalName}</prefix>
									</mapper>
								</data>
								<data>
									<src>${basedir}/src/main/deb/rencoder.desktop</src>
									<type>file</type>
									<mapper>
										<type>perm</type>
										<prefix>/usr/share/applications</prefix>
									</mapper>
								</data>
							</dataSet>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>1_maven.apache.org</id>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>https://repo.maven.apache.org/maven2</url>
			<layout>default</layout>
		</repository>

		<repository>
			<id>git-ornrocha</id>
			<url>https://github.com/ornrocha/thirdparty/raw/master/mvn-repo</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
	</repositories>


</project>
