<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     18/09/2014 13:26:03                                                        

     project    
     description
                   
     orocha                                                                
     ====================================================================== -->
<project name="project" basedir="." default="build-releases">
        <description>description </description>
	
	
        <property name="debug" value="on"/>
        <property name="optimize" value="off"/>
	    <property name="deprecation" value="false"/>
	    <property name="depend" value="true"/>
	    <property name="verbose" value="false"/>


	 <!-- ==================================================================
	         Initialization target 
	      ==================================================================-->

	 <target name="init">
	 	
	 	<property name="target.dir" value="${project.build.directory}"/>
	    <property name="build.dir" value="${target.dir}/build_dir"/>
        <property name="distro.dir" value="${build.dir}/distros"/>
	 	<property name="ffmpeg.folder" value="${build.dir}/ffmpeg"/>

	 
	 </target>
	 	
	 
	 <!-- ==================================================================
			        Scripts operations
	      ==================================================================-->
	
	<target name="create-rencoder-version-file">
			<echo file="${build.dir}/Version.txt" append="false">version:${rencoder.version}</echo>			
	</target>
	
	<target name="make-linux-run-script">
			<echo file="${linux.build.dir}/run.sh" append="false">#!/bin/bash
		###################################################################
		#
		echo "Rencoder for Linux"
		# 
		#		
		echo "Orlando Rocha Copyright (c) 2014-2020."
		#
		###################################################################


		JAR_NAME="rencoder.jar"
		APP_HOME=`dirname $0`
		XMX=-Xmx512m
		XMS=-Xms256M
				 
		$APP_HOME/jre/bin/java $XMX $XMS -jar $APP_HOME/$JAR_NAME "$@"</echo>
				
		<chmod file="${linux.build.dir}/run.sh" perm="a+x"/>

		</target>
	
	<target name="make-snap-linux-run-script">
			<echo file="${target.snap.rencoder.resources}/rencoder.sh" append="false">#!/bin/bash
		###################################################################
		#
		echo "Rencoder for Linux"
		# 
		#		
		echo "Orlando Rocha Copyright (c) 2014-2020."
		#
		###################################################################


		JAR_NAME="rencoder.jar"
		APP_HOME=`dirname $0`
		XMX=-Xmx512m
		XMS=-Xms256M

		if [ ! -d $SNAP_USER_DATA/ffmpeg ]; then
		    cp -R $SNAP/rencoder/ffmpeg $SNAP_USER_DATA/ffmpeg
		fi
		if [ ! -d $SNAP_USER_DATA/settings ]; then
			cp -R $SNAP/rencoder/settings $SNAP_USER_DATA/settings
		fi
		if [ ! -d $SNAP_USER_DATA/languages ]; then
			cp -R $SNAP/rencoder/languages $SNAP_USER_DATA/languages
		fi
		if [ ! -d $SNAP_USER_DATA/profiles ]; then
			cp -R $SNAP/rencoder/profiles $SNAP_USER_DATA/profiles
		fi
		if [ ! -f $SNAP_USER_DATA/rencoder.jar ]; then
			cp $SNAP/rencoder/rencoder.jar $SNAP_USER_DATA/rencoder.jar
		fi
				
		cp $SNAP/rencoder/settings/Version.txt $SNAP_USER_DATA/settings/Version.txt		
				 
		java $XMX $XMS -Duser.dir=$SNAP_USER_DATA -jar $APP_HOME/$JAR_NAME "$@"</echo>
				
		<chmod file="${target.snap.rencoder.resources}/rencoder.sh" perm="a+x"/>

		</target>
	
	<target name="make-appimage-run-script">
			<echo file="${target.appimage.rencoder}/usr/bin/rencoder" append="false">#!/bin/bash
				###################################################################
						#
						echo "Rencoder for Linux"
						# 
						#		
						echo "Orlando Rocha Copyright (c) 2014-2020."
						#
						###################################################################


						JAR_NAME="rencoder.jar"
						APP_HOME=`dirname $0`
						XMX=-Xmx512m
						XMS=-Xms256M

						$APPDIR/usr/bin/jre/bin/java $XMX $XMS -Duser.dir=$RENCODER_DATA -jar $APP_HOME/$JAR_NAME "$@"</echo>
				
		<chmod file="${target.appimage.rencoder}/usr/bin/rencoder" perm="a+x"/>

		</target>
	
	<target name="make-appimage-flag-file">
			<echo file="${target.appimage.rencoder}/usr/share/data/.appimage" append="false">appimage installation</echo>
				
		</target>
		
		<target name="make-windows-run-script">
			<echo file="${windows.build.dir}/run.bat" append="false">@echo off
				REM ###############################################################################################
				REM #
				REM	# Rencoder for Windows
				REM	# 
				REM	#		
				REM	# Orlando Rocha Copyright (c) 2014-2020.
				REM	#
				REM ###############################################################################################
				REM ################ old #################
				REM ####   set HOME="%~dp0"  #############
				REM ####   cd %HOME%  ####################
				REM ######################################
				REM ######  for /f %%i in ("%0") do set apppath=%%~dpi
				REM ######  cd /d %apppath%
				
				setlocal
				cd /d %~dp0
				start rencoder.jar
				
		    </echo>
			<chmod file="${windows.build.dir}/run.bat" perm="a+x"/>
		</target>
	
	   <target name="make-snap-build-script">
			<echo file="${distros.build.dir}/build-snap.sh" append="false">#!/bin/bash

		SCRIPT_HOME=`dirname $0`
        cd $SCRIPT_HOME/snap
		snapcraft clean
		snapcraft</echo>
				
		<chmod file="${distros.build.dir}/build-snap.sh" perm="a+x"/>

		</target>
	
	   <target name="make-appimage-build-script">
			<echo file="${appimage.build.dir}/build-appimage.sh" append="false">#!/bin/bash

		SCRIPT_HOME=`dirname $0`
		cd $SCRIPT_HOME/Rencoder.AppDir
		ln -s ./usr/share/icons/hicolor/256x256/apps/rencoder.png .
		cd ..
		./appimagetool-x86_64.AppImage Rencoder.AppDir Rencoder-${rencoder.version}-x86_64.AppImage</echo>
				
		<chmod file="${appimage.build.dir}/build-appimage.sh" perm="a+x"/>

		</target>
	
	
	 <!-- ==================================================================
				       Izpack operations
				      ==================================================================-->
	
	
	<target name="make-izpack-package-unix-script">
		<echo file="${linux.build.dir}/rencoder_installer_unix_shortcutSpec.xml" append="false"><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
				   	     <shortcuts>
				   	        <skipIfNotSupported/>
				   	        <defaultCurrentUser/>
				   	        <programGroup defaultName="Rencoder" location="applications"/>
				   	        <shortcut 
				   	  	           name="Rencoder"
				   	  	           target="$INSTALL_PATH/run.sh"
				   	  	           description="Rencoder is a front-end for FFmpeg."
				   	               applications="no" 
				   	               desktop="no"
				   	               encoding="UTF-8" 
				   	               iconFile="$INSTALL_PATH/icons/rencoderbluesc.png"
				   	               workingDirectory="$INSTALL_PATH"
				   	               iconIndex="0" 
				   	               initialState="normal" 
				   	               programGroup="yes" 
				   	               startMenu="no" 
				   	               startup="no"
				   	               type="Application"
			                       categories="AudioVideo;Video"
				   	               />    
				   	 </shortcuts>]]></echo>
		</target>
		
		<target name="make-izpack-package-windows-script">
			 <echo file="${windows.build.dir}/default_shortcut_specification.xml" append="false"><![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
					   	    	<shortcuts>
					   	    	    <skipIfNotSupported/>
					   	    	    <defaultCurrentUser/>
					   	    	    <programGroup defaultName="Rencoder" location="applications"/>
					   	    	    <shortcut 
					   	    	        name="Rencoder"
					   	    	        applications="no" 
					   	    	        desktop="yes"
					   	    	        iconFile="$INSTALL_PATH\icons\rencoderbluesc.ico" 
					   	    	        iconIndex="0"
			 	                        initialState="normal" 
					   	    	        programGroup="yes"
					   	    	        startMenu="no" 
					   	    	        startup="no" 
					   	    	        target="$INSTALL_PATH/run.bat"
					   	    	        description="Rencoder is a front-end for FFmpeg.">
					   	    	<createForPack name="Rencoder_Core"/>
					   	    	</shortcut>
			 					<shortcut
			 					   	    name="Uninstall"
			 					   	    programGroup="yes"
			 					   	    desktop="no"
			 					   	    applications="no"
			 					   	    startMenu="no"
			 					   	    startup="no"
			 					   	    target="$INSTALL_PATH\Uninstaller\uninstaller.jar"
			 					   	    commandLine=""
			 			 	 			iconFile="%SystemRoot%\system32\SHELL32.dll"
			 					   	    iconIndex="31"
			 					   	    description="Rencoder Uninstaller">

			 					    <createForPack name="Rencoder_Core"/>
			 					</shortcut>
					   	    	</shortcuts>]]></echo>
		</target>
	


          <!-- ==================================================================
	        Creation operations
	      ==================================================================--> 
	
	  <condition property="isUnix">
	    <os family="unix" />
	  </condition>
	
	      <target name="create-dist-dir" description="distribution directory">
	      	            <delete dir="${distro.dir}" />
		                <mkdir dir="${distro.dir}" />
		                <echo message="Distribution directory: was created"/>
		  </target>

	
	  <target name="unzip-jre-linux">
	  	 <unzip src="${basedir}/src/main/jre/OpenJDK8U-jre_x64_linux_hotspot.zip" dest="${linux.build.dir}"/> 
	  </target>
	
	  <target name="unzip-jre-windows">
	  	 <unzip src="${basedir}/src/main/jre/OpenJDK8U-jre_x64_windows_hotspot.zip" dest="${windows.build.dir}"/> 
	  </target>
	
	 
	
	<target name="archive-to-snap" description="make a tar.gz file">
		<tar destfile="${final.distros.dir}/rencoder-${rencoder.version}-snap.tar.gz" longfile="gnu" compression="gzip">

		<tarfileset dir="${snap.build.dir}/" filemode="755">
			<include name="rencoder/rencoder.sh" />
			<include name="rencoder/ffmpeg/default_ffmpeg"/>
			<include name="rencoder/rencoder.jar"/>
		</tarfileset>
		<tarfileset dir="${snap.build.dir}/">
			<include name="rencoder/ffmpeg/fontconfig/*" />
			<include name="rencoder/icons/*" />
			<include name="rencoder/languages/*" />
			<include name="rencoder/profiles/*" />
			<include name="rencoder/settings/*" />
			<include name="mimeapps.list" />
		</tarfileset>
		</tar>
	</target>
	
	<target name="build-snap" description="build snap package">
		 <exec dir="${distros.build.dir}" executable="/bin/bash">
		    <arg value="build-snap.sh"/>
		  </exec>
		<!--<exec executable="snapcraft" dir="${snap.build.dir}" failonerror="yes" />-->
	</target>
	
	 <target name="snap.check">
	    <condition property="snap.exists">
	      <available file="${snap.build.dir}/rencoder_${rencoder.version}_amd64.snap" type="file" />
	    </condition>
	  </target>
	
	<target name="move-snap" depends="snap.check" if="snap.exists" description="move snap package">
		    <echo>${snap.build.dir}/rencoder_${rencoder.version}_amd64.snap exists</echo>
		  	<move file="${snap.build.dir}/rencoder_${rencoder.version}_amd64.snap" todir="${final.distros.dir}"/>
	</target>
	
	
    <target name="create-appimage-dirs" description="make directories for building appimage">
	                <mkdir dir="${target.appimage.rencoder}/usr/bin" />
    	            <mkdir dir="${target.appimage.rencoder}/usr/share/data" />
    	            <mkdir dir="${target.appimage.rencoder}/usr/share/icons/hicolor/256x256/apps" />
	                <echo message="appimage folder was created"/>
	  </target>
	
	<target name="create-rencoder-appimage-version-file">
			<echo file="${target.appimage.rencoder}/usr/share/data/settings/Version.txt" append="false">version:${rencoder.version}</echo>			
	</target>
	
    <target name="setup-appimage-build" description="setup resources for building appimage">
    			<copy todir="${target.appimage.rencoder}/usr/bin" >  
    	  			<fileset dir="${linux.build.dir}" includes="jre/**"/>
    			</copy>
    	        <copy todir="${target.appimage.rencoder}/usr/share/data" >  
    	    	  	<fileset dir="${main.rencoder.resources}" includes="ffmpeg/default_ffmpeg"/>
    	        	<fileset dir="${main.rencoder.resources}" includes="ffmpeg/fontconfig/**"/>
    	        	<fileset dir="${main.rencoder.resources}" includes="icons/**"/>
    	        	<fileset dir="${main.rencoder.resources}" includes="languages/**"/>
    	        	<fileset dir="${main.rencoder.resources}" includes="profiles/**"/>
    	        	<fileset dir="${main.rencoder.resources}" includes="settings/**"/>
    	    	</copy>
    	        <chmod file="${main.rencoder.resources}/ffmpeg/default_ffmpeg" perm="a+x"/>
    	        <copy file="${build.dir}/rencoder.jar" todir="${target.appimage.rencoder}/usr/bin" />
    	        <copy file="${source.appimage.resources}/rencoder.png" todir="${target.appimage.rencoder}/usr/share/icons/hicolor/256x256/apps" />
    	        <!--<copy file="${build.dir}/Version.txt" tofile="${target.appimage.rencoder}/usr/share/data/settings/Version.txt" />-->
    	        <delete file="${target.appimage.rencoder}/rencoder.png"/>
    	        <chmod file="${target.appimage.rencoder}/usr/bin/rencoder.jar" perm="a+x"/>
    	        <chmod file="${target.appimage.rencoder}/AppRun" perm="a+x"/>
    	        <chmod file="${target.appimage.rencoder}/usr/bin/jre/bin/java" perm="a+x"/>
    	        <chmod file="${target.appimage.rencoder}/usr/share/data/settings/demo/demo.mp4" perm="a+r"/>
    	        <chmod file="${target.appimage.rencoder}/usr/share/data/settings/demo/demo.ass" perm="a+r"/>
	  </target>
	
	<target name="copy-appimage-builder" description="copy appimage compiler">
		    	<copy file="${appimage.compiler}" todir="${appimage.build.dir}/" />
		        <chmod file="${appimage.build.dir}/appimagetool-x86_64.AppImage" perm="a+x"/>
    </target>
	
	<target name="build-appimage" description="build appimage package">
		 <exec dir="${appimage.build.dir}" executable="/bin/bash">
		    <arg value="build-appimage.sh"/>
		  </exec>
	</target>
	
	 <target name="appimage.check">
	    <condition property="appimage.exists">
	      <available file="${appimage.build.dir}/Rencoder-${rencoder.version}-x86_64.AppImage" type="file" />
	    </condition>
	  </target>
	
	<target name="move-appimage" depends="appimage.check" if="appimage.exists" description="move appimage package">
		    <echo>Rencoder.AppImage exists</echo>
		  	<move file="${appimage.build.dir}/Rencoder-${rencoder.version}-x86_64.AppImage" todir="${final.distros.dir}"/>
	</target>
	
	<target name="setup-updater"  description="setup resources for updating">
		<copy todir="${updater.build.dir}" >  
		  <fileset dir="${linux.build.dir}" includes="icons/**"/>
		  <fileset dir="${linux.build.dir}" includes="languages/**"/>
		  <fileset dir="${linux.build.dir}" includes="profiles/**"/>
		  <fileset dir="${linux.build.dir}" includes="settings/**"/>
		  <fileset dir="${linux.build.dir}" includes="rencoder.jar"/>		
		</copy>
	</target>
	
	<target name="zip-updater"  description="zip resources for updating">
		<zip destfile="${final.distros.dir}/updates.zip"
	       basedir="${updater.build.dir}"
	  	/>
	</target>
	
    <target name="setup-makeself-build" description="setup resources for building makeself">

    	        <copy todir="${makeself.build.dir}" >
    	        	<fileset dir="${linux.build.dir}" includes="jre/**"/>
    	    	  	<fileset dir="${linux.build.dir}" includes="ffmpeg/default_ffmpeg"/>
    	        	<fileset dir="${linux.build.dir}" includes="ffmpeg/fontconfig/**"/>
    	        	<fileset dir="${linux.build.dir}" includes="icons/**"/>
    	        	<fileset dir="${linux.build.dir}" includes="languages/**"/>
    	        	<fileset dir="${linux.build.dir}" includes="profiles/**"/>
    	        	<fileset dir="${linux.build.dir}" includes="settings/**"/>	
    	    	</copy>
    	        <chmod file="${linux.build.dir}/ffmpeg/default_ffmpeg" perm="a+x"/>
    	        <copy file="${linux.build.dir}/rencoder.jar" todir="${makeself.build.dir}" />
    	        <copy file="${source.makeself.resources}/install.sh" todir="${makeself.build.dir}" />
    	        <chmod file="${makeself.build.dir}/rencoder.jar" perm="a+x"/>
    	        <chmod file="${makeself.build.dir}/install.sh" perm="ugo+rx"/>
    	        <chmod file="${makeself.build.dir}/jre/bin/java" perm="a+x"/>
    	        <chmod file="${makeself.build.dir}/settings/demo/demo.mp4" perm="a+r"/>
    	        <chmod file="${makeself.build.dir}/settings/demo/demo.ass" perm="a+r"/>
	  </target>
	
	
	
	 <target name="prepare-general-release-files" description="Prepare files to create linux releases">
	 	 <antcall target="create-dist-dir"/>
	     <antcall target="create-rencoder-version-file"/>
	 </target>	
	
    <!-- ==================================================================
      Linux releases
    ==================================================================--> 
	
	 <target name="prepare-linux-release-files" description="Prepare files to create linux releases" if="isUnix">
	 	<antcall target="make-linux-run-script"/>
	 	<copy file="${build.dir}/Version.txt" todir="${linux.build.dir}/settings" />
	 	<copy file="${build.dir}/rencoder.jar" todir="${linux.build.dir}/" />
	 	<antcall target="unzip-jre-linux"/>	
	 </target>
	
	 <target name="setup-izpack-linux" description="Create linux izpack" if="isUnix">
	 	<antcall target="make-izpack-package-unix-script"/>	
	 </target>	
	
	 <target name="create-appimage" description="Create linux appimage" if="isUnix">
	 	<antcall target="create-appimage-dirs"/>
	 	<antcall target="make-appimage-run-script"/>
	 	<antcall target="make-appimage-flag-file"/>
	 	<antcall target="make-appimage-build-script"/>
	 	<antcall target="setup-appimage-build"/>
	 	<antcall target="create-rencoder-appimage-version-file"/>
	 	<antcall target="copy-appimage-builder"/>
	 	<antcall target="build-appimage"/>
	 	<antcall target="move-appimage"/>	
	 </target>	
	
	 <target name="create-snap" description="Create linux snap image" if="isUnix">
	 	<antcall target="make-snap-linux-run-script"/>
	 	<antcall target="make-snap-build-script"/>
	 	<copy file="${build.dir}/rencoder.jar" todir="${target.snap.rencoder.resources}/" />
	 	<copy file="${build.dir}/Version.txt" todir="${target.snap.rencoder.resources}/settings" />
	 	<copy file="${source.mime.list}" todir="${snap.build.dir}/" />
	  	<antcall target="archive-to-snap"/>
	  	<antcall target="build-snap"/>
	  	<antcall target="move-snap"/>
	 </target>	
	
	

	 <target name="build-linux-releases" description="Create  auxiliar files" if="isUnix">
	 	<antcall target="prepare-linux-release-files"/>
	 	<antcall target="setup-izpack-linux"/>	
	 	<antcall target="create-appimage"/>	
	 	<!--<antcall target="create-snap"/>	--> 
	 	<antcall target="setup-makeself-build"/>	
	 </target>
	
    <!-- ==================================================================
      Windows releases
    ==================================================================--> 
	
	<target name="prepare-windows-release-files" description="Prepare files to create windows releases">
		<antcall target="make-windows-run-script"/>
		<antcall target="make-izpack-package-windows-script"/>
		<copy file="${build.dir}/Version.txt" todir="${windows.build.dir}/settings" />
		<copy file="${build.dir}/rencoder.jar" todir="${windows.build.dir}/" />
		<antcall target="unzip-jre-windows"/>
	</target>
	
	 <target name="setup-izpack-windows" description="Create windows izpack">
	 	<antcall target="make-izpack-package-windows-script"/>	 
	 </target>	
	
	
	 <target name="build-windows-releases" description="Build windows releases">
	 	<antcall target="prepare-windows-release-files"/>
	 	<antcall target="setup-izpack-windows"/>
	 </target>
	
	
    <!-- ==================================================================
      All releases
    ==================================================================--> 
		
	  <target name="build-releases" description="Build Rencoder releases" depends="init">
	  	<antcall target="prepare-general-release-files"/>
	    <antcall target="build-windows-releases"/>
	  	<antcall target="build-linux-releases"/>	
	  	<!--<antcall target="setup-updater"/>
	  	<antcall target="zip-updater"/>	-->
	</target>
	
    

</project>